#  VIDEO TRACKER

## Endpoints:
-----------------

###  **`/videos`** - [POST]

Create a video:

###### Required Fields:
+ name
+ brand
+ published_at 

`published_at` can be null on initial create and can be updated later via patch.

Example: 

> `curl --request POST --url http://localhost:3000/videos --header 'Content-Type: application/json' --data '{ "name": "Test Video", "brand": "Thrillist", "published_at": "2017-12-12T13:51:27.222Z"}'`

Response: 

    {
      "id": 1,
      "name": "Test Video",
      "brand": "Thrillist",
      "created_at": "2018-06-14T06:32:11.048Z",
      "updated_at": "2018-06-14T06:32:11.048Z",
      "published_at": "2017-12-12T13:51:27.222Z"
    }  

###   **`/videos/:video_id/views`** - [POST] 

Adds a view for a video

###### Fields:
+ viewed_at

If no `viewed_at` param is included in the body, the current date and time are used.

Example: 

> `curl --request POST --url http://localhost:3000/videos/1/views --header 'Content-Type: application/json' --data '{"viewed_at": "2017-09-12T13:51:27.222Z"}'`

Response: 200

    {
        "id":1,
        "video_id":1,
        "viewed_at":"2017-09-12T13:51:27.222Z",
        "created_at":"2018-06-14T06:35:55.532Z",
        "updated_at":"2018-06-14T06:35:55.532Z"
    }

###  **`/videos`** - [GET]

Returns all videos

Example:

> `curl --request GET --url http://localhost:3000/videos`

Response: 200

    [
      {
        "id": 1,
        "name": "Test Video",
        "brand": "Thrillist",
        "created_at": "2018-06-14T04:08:32.824Z",
        "updated_at": "2018-06-14T04:08:32.824Z",
        "published_at": "2017-12-12T13:51:27.222Z"
      },
      {
        "id": 2,
        "name": "Test Video 2",
        "brand": "NowThis",
        "created_at": "2018-06-14T04:08:35.730Z",
        "updated_at": "2018-06-14T04:08:35.730Z",
        "published_at": "2018-01-12T03:32:27.222Z"
      }
    ]

###  **`/views`** - [GET]

Returns all views

Example: 

> `curl --request GET --url http://localhost:3000/views`

Response: 200 

    [
      {
        "id": 1,
        "video_id": 1,
        "viewed_at": "2017-09-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:41.361Z",
        "updated_at": "2018-06-14T04:12:41.361Z"
      },
      {
        "id": 2,
        "video_id": 1,
        "viewed_at": "2017-06-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:52.549Z",
        "updated_at": "2018-06-14T04:12:52.549Z"
      },
      {
        "id": 3,
        "video_id": 1,
        "viewed_at": "2017-06-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:53.384Z",
        "updated_at": "2018-06-14T04:12:53.384Z"
      },
      {
        "id": 4,
        "video_id": 2,
        "viewed_at": "2017-06-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:53.692Z",
        "updated_at": "2018-06-14T04:12:53.692Z"
      }
    ]

###  **`/videos/:video_id`** - [GET]

Returns a specific video

Example:

> `curl --request GET --url http://localhost:3000/videos/1`

Response: 200

    {
      "video": {
        "id": 1,
        "name": "Test Video",
        "brand": "Thrillist",
        "created_at": "2018-06-14T06:32:11.048Z",
        "updated_at": "2018-06-14T06:32:11.048Z",
        "published_at": "2017-12-12T13:51:27.222Z"
      }
    }

###  **`/views/?video_id=:video_id`** - [GET]

Returns views for a specific video

Example: 

> `curl --request GET --url http://localhost:3000/views?video_id=1`

Response: 200 

    [
      {
        "id": 1,
        "video_id": 1,
        "viewed_at": "2017-09-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:41.361Z",
        "updated_at": "2018-06-14T04:12:41.361Z"
      },
      {
        "id": 2,
        "video_id": 1,
        "viewed_at": "2017-06-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:52.549Z",
        "updated_at": "2018-06-14T04:12:52.549Z"
      },
      {
        "id": 3,
        "video_id": 1,
        "viewed_at": "2017-06-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:53.384Z",
        "updated_at": "2018-06-14T04:12:53.384Z"
      },
      {
        "id": 4,
        "video_id": 1,
        "viewed_at": "2017-06-12T13:51:27.222Z",
        "created_at": "2018-06-14T04:12:53.692Z",
        "updated_at": "2018-06-14T04:12:53.692Z"
      }
    ]

###  **`/videos/:video_id`** - [PATCH]
Updates a specific video

Example: 

> `curl --request PATCH --url http://localhost:3000/videos/1 --header 'Content-Type: application/json' --data '{"name": "New Video Name","brand": "New Brand"}'`

Response: 200 

    {
      "id": 1,
      "name": "New Video Name",
      "brand": "New Brand",
      "published_at": "2017-12-12T13:51:27.222Z",
      "created_at": "2018-06-14T04:08:32.824Z",
      "updated_at": "2018-06-14T11:47:37.890Z"
    }

## Report queries
----------------
###  **`/videos/:video_id?view_count=true`** - [GET]
Get view count for a specific video

Example: 

> `curl --request GET --url 'http://localhost:3000/videos/1?view_count=true'`

Response: 200 

    {
      "video": {
        "id": 1,
        "name": "New Video Name",
        "brand": "New Brand",
        "created_at": "2018-06-14T04:08:32.824Z",
        "updated_at": "2018-06-14T11:47:37.890Z",
        "published_at": "2017-12-12T13:51:27.222Z"
      },
      "view count": 11
    }

###  **`/videos/:video_id?views_on_date=2017-06-12`** - [GET]
Get view count for a specific video on a specific date

Example: 

> `curl --request GET --url 'http://localhost:3000/videos/1?views_on_date=2017-06-12'`

Response: 200 

    {
      "video": {
        "id": 1,
        "name": "New Video Name",
        "brand": "New Brand",
        "created_at": "2018-06-14T04:08:32.824Z",
        "updated_at": "2018-06-14T11:47:37.890Z",
        "published_at": "2017-12-12T13:51:27.222Z"
      },
      "view count": 5
    }

###  **`/videos/:video_id?views_from_date=2017-06-12`** - [GET]
Get view count for a specific video from a specific date

Example: 

> `curl --request GET --url 'http://localhost:3000/videos/1?views_from_date=2017-06-12'`

Response: 200 

    {
      "video": {
        "id": 1,
        "name": "New Video Name",
        "brand": "New Brand",
        "created_at": "2018-06-14T04:08:32.824Z",
        "updated_at": "2018-06-14T11:47:37.890Z",
        "published_at": "2017-12-12T13:51:27.222Z"
      },
      "view count": 10
    }



## Errors:
---------------
### **`Not Found Error`**
If an item does not exist in the database a 404 is returned.

**Response: 404**

    {
      "error": "not_found_error",
      "message": "The item was not found.",
      "video_id": "20"
    }

### **`Malformed Parameter Error`**
If a field in a post body is malformed a 403 is returned.

**Response: 403**

    {
      "error": "malformed_parameter_error",
      "message": "One or more required parameters are malformed.",
      "parameter": "published_at",
      "requirement": "no time information in 'bad_time'"
    }

### **`Missing Parameter Error`**
If a field in a post body is missing but required a 403 is returned.

**Response: 422**

    {
      "error": "missing_parameter_error",
      "message": "One or more required parameters are missing.",
      "required parameters": [
        "name",
        "brand",
        "published_at"
      ]
    }
